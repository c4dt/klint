# Notes:
# If using multiple ports on the same NIC, ensure PCIe bandwidth doesn't become the bottleneck
# PCI addresses should be listed in ascending order so that their order matches in programs that do not sort them, e.g. TinyNF

# 0-based index of the CPU(s) on which the NF will run
export DUT_CPUS=8,9
# PCI BDF addresses of the DUT's NICs
export DUT_DEVS='83:00.0 85:00.0'

# Hostname of the tester, such that the DUT can SSH to it
export TESTER_HOST='icnalsp3s3'
# 0-based index of the CPUs on which the packet generator can run
# As many as possible, but should be on the same socket as the NICs
export TESTER_CPUS=8,9,10,11,12,13,14,15
# PCI BDF addresses of the tester's NICs
export TESTER_DEVS='83:00.0 85:00.0'
# 1 if you messed up your wiring and crossed the cables, 0 otherwise
export TESTER_CABLES_CROSSED=1

# Name of the local log file containing the build and run output
export LOG_FILE='bench.log'
# Name of the folder in the remote $HOME containing the benchmarking scripts
export REMOTE_FOLDER_NAME='nf-benchmarking-scripts'
# Name of the makefile used for benchmark targets; do not change unless you know what you're doing
export BENCH_MAKEFILE_NAME='Makefile.benchmarking'
